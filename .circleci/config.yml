version: 2
jobs:
  build:
    environment:
      AWS_RESOURCE_NAME_PREFIX: 'circleci_api_demo'
      AWS_ACCOUNT_ID: '154520557167'
      AWS_DEFAULT_REGION: 'us-east-2'
#      PROJECT_VERSION: ''
    working_directory: ~/circleci-api-demo
    docker:
    - image: circleci/openjdk:8-jdk
    steps:
    - checkout
    - setup_remote_docker:   # (2)
         docker_layer_caching: true # (3)
    - restore_cache:
        key: circleci-api-demo-{{ checksum "pom.xml" }}
    - run: mvn -Pdev dependency:go-offline
    - save_cache:
        paths:
        - ~/.m2
        key: circleci-api-demo-{{ checksum "pom.xml" }}
    - run: mvn -Pdev -s .circleci/settings.xml clean package -DskipTests
    - run:
        name: Setup common environment variables
        command: |
            PROJECT_VERSION_T=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)
            echo $PROJECT_VERSION
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:${CIRCLE_SHA1}"' >> $BASH_ENV

    - run:
        name: Build image
        command: |
              docker build -t $FULL_IMAGE_NAME .
    - run:
        name: Save image to an archive
        command: |
            mkdir docker-image
            docker save -o docker-image/image.tar $FULL_IMAGE_NAME
    - persist_to_workspace:
        root: .
        paths:
        - docker-image
#    - run:
#        name: echo project version
#        command: |
#          PROJECT_VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)
#          echo $PROJECT_VERSION
#          docker login -u $DOCKER_USER -p $DOCKER_PASS
#          docker build -t cognaize/spreading_api:$PROJECT_VERSION .
#          docker push cognaize/spreading_api:$PROJECT_VERSION
  deploy:
    working_directory: ~/circleci-api-demo
    docker:
    - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
      AWS_RESOURCE_NAME_PREFIX: 'circleci_api_demo'
      AWS_ACCOUNT_ID: '154520557167'
      AWS_DEFAULT_REGION: 'us-east-2'
    steps:
    - checkout
    - setup_remote_docker
    - attach_workspace:
        at: workspace
    - run:
        name: Install awscli
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install awscli>=1.15.50
    - run:
        name: Load image
        command: |
          docker load --input workspace/docker-image/image.tar
    - run:
        name: Setup common environment variables
        command: |
          echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
          echo 'export ECS_CLUSTER_NAME="${AWS_RESOURCE_NAME_PREFIX}-cluster"' >> $BASH_ENV
          echo 'export ECS_SERVICE_NAME="${AWS_RESOURCE_NAME_PREFIX}-service"' >> $BASH_ENV
    - run:
        name: Push image
        command: |
          . venv/bin/activate
          eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:$CIRCLE_SHA1
    - run:
        name: Deploy
        command: |
          . venv/bin/activate
          export ECS_TASK_FAMILY_NAME="${AWS_RESOURCE_NAME_PREFIX}-service"
          export ECS_CONTAINER_DEFINITION_NAME="${AWS_RESOURCE_NAME_PREFIX}-service"
          export EXECUTION_ROLE_ARN="arn:aws:iam::$AWS_ACCOUNT_ID:role/${AWS_RESOURCE_NAME_PREFIX}-ecs-execution-role"
          ./deploy.sh


workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
#      - deploy
#          filters:
#            branches:
#              only: circle
      - deploy:
          requires:
          - build
          filters:
            branches:
              only: master